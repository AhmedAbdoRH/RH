<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>تسجيل الغياب - محمد حسام</title>
    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.11.0/firebase-app.js";
        import { getFirestore, collection, addDoc, getDocs, deleteDoc, query, where, doc } from "https://www.gstatic.com/firebasejs/10.11.0/firebase-firestore.js";

        const firebaseConfig = {
            apiKey: "AIzaSyBt33Ut9nw0WX-DDRi46pB4klvXB8eNe90",
            authDomain: "rhm-banking.firebaseapp.com",
            projectId: "rhm-banking",
            storageBucket: "rhm-banking.appspot.com",
            messagingSenderId: "441668952624",
            appId: "1:441668952624:web:f45150dcdc42c6c48203f5",
        };

        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);

        let employeeName = "محمد حسام";
        let monthlySalary = 3000;
        let workingDaysPerMonth = 24;
        let exchangeRate = 51;

        async function addAbsence() {
            let absenceType = parseFloat(document.querySelector('input[name="absenceType"]:checked').value);
            let reason = document.getElementById("reason").value;
            let description = document.getElementById("absenceDescription").value;
            let today = new Date();
            let isBonus = false;

            if (!description) {
                alert("الرجاء إدخال وصف تفصيلي للغياب");
                return;
            }

            try {
                await addDoc(collection(db, "absences"), {
                    name: employeeName,
                    date: today.toISOString(), // للترتيب
                    displayDate: today.toLocaleDateString("ar-EG"), // للعرض
                    type: absenceType, // 0.5 أو 1
                    reason: reason,
                    description: description,
                    isBonus: isBonus
                });
                document.getElementById("absenceDescription").value = ""; // Clear the description field
                location.reload();
            } catch (error) {
                console.error("خطأ أثناء تسجيل الغياب:", error);
            }
        }

        async function addBonus() {
            let bonusType = parseFloat(document.querySelector('input[name="bonusType"]:checked').value);
            let reason = document.getElementById("bonusReason").value;
            let description = document.getElementById("bonusDescription").value;
            let today = new Date();
            let isBonus = true;

            if (!description) {
                alert("الرجاء إدخال وصف تفصيلي للبونص");
                return;
            }

            try {
                await addDoc(collection(db, "absences"), {
                    name: employeeName,
                    date: today.toISOString(), // للترتيب
                    displayDate: today.toLocaleDateString("ar-EG"), // للعرض
                    type: bonusType, // 0.5 أو 1
                    reason: reason,
                    description: description,
                    isBonus: isBonus
                });
                document.getElementById("bonusDescription").value = ""; // Clear the description field
                location.reload();
            } catch (error) {
                console.error("خطأ أثناء تسجيل البونص:", error);
            }
        }

        async function deleteRecord(recordId) {
            try {
                await deleteDoc(doc(db, "absences", recordId));
                location.reload();
            } catch (error) {
                console.error("خطأ أثناء الحذف:", error);
            }
        }

        async function updateTable() {
            let tableBody = document.getElementById("absenceTable");
            let totalAbsenceBox = document.getElementById("totalAbsence");
            let totalBonusBox = document.getElementById("totalBonus");
            let salaryBox = document.getElementById("calculatedSalary");
            let salaryUSDBox = document.getElementById("calculatedSalaryUSD");

            tableBody.innerHTML = "";
            let totalAbsence = 0;
            let totalBonus = 0;

            try {
                let snapshot = await getDocs(collection(db, "absences"));
                let records = [];

                snapshot.forEach(doc => {
                    let data = doc.data();
                    if (data.name === employeeName) {
                        records.push({ id: doc.id, ...data });
                    }
                });

                // ترتيب السجلات حسب الأحدث أولاً
                records.sort((a, b) => new Date(b.date) - new Date(a.date));

                records.forEach(record => {
                    let typeDisplay = record.type === 1 ? "يوم كامل" : "نص يوم"; // عرض صحيح بناءً على القيمة
                    if (record.isBonus) {
                        totalBonus += record.type;
                    } else {
                        totalAbsence += record.type;
                    }
                    let row = `<tr>
                        <td>${record.displayDate}</td>
                        <td>${typeDisplay} ${record.isBonus ? "<span class='bonus-tag'>بونص</span>" : ""}</td>
                        <td>
                            <div><strong>${record.reason}</strong></div>
                            <div style="color: #aaa; font-size: 0.9em; margin-top: 5px;">${record.description || 'لا يوجد وصف'}</div>
                        </td>
                        <td><button class="delete-btn" onclick="deleteRecord('${record.id}')"><i class="fas fa-trash"></i></button></td>
                    </tr>`;
                    tableBody.innerHTML += row;
                });

                let attendanceDays = workingDaysPerMonth - totalAbsence + totalBonus;
                let calculatedSalary = (attendanceDays / workingDaysPerMonth) * monthlySalary;
                let calculatedSalaryUSD = (calculatedSalary / exchangeRate).toFixed(2);

                totalAbsenceBox.textContent = totalAbsence + " يوم";
                totalBonusBox.textContent = totalBonus + " يوم";
                salaryBox.textContent = calculatedSalary.toFixed(2) + " جنيه";
                salaryUSDBox.textContent = calculatedSalaryUSD + " دولار";

            } catch (error) {
                console.error("خطأ أثناء جلب البيانات:", error);
            }
        }

        async function clearData() {
            try {
                let q = query(collection(db, "absences"), where("name", "==", employeeName));
                let snapshot = await getDocs(q);
                snapshot.forEach(async (docRef) => {
                    await deleteDoc(doc(db, "absences", docRef.id));
                });
                location.reload();
            } catch (error) {
                console.error("خطأ أثناء حذف البيانات:", error);
            }
        }

        window.onload = updateTable;
        window.addAbsence = addAbsence;
        window.addBonus = addBonus;
        window.deleteRecord = deleteRecord;
        window.clearData = clearData;
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script>
        function captureScreenshot() {
            html2canvas(document.body).then(canvas => {
                let link = document.createElement("a");
                link.href = canvas.toDataURL("image/png");
                link.download = "سجل الغياب.png";
                link.click();
            });
        }
    </script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: #000000;
            color: #f0f0f0;
            padding: 20px;
            line-height: 1.6;
            text-align: center;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        h2 {
            color: #ffffff;
            margin-bottom: 30px;
            font-size: 2.2rem;
            text-shadow: 0 0 15px rgba(255, 255, 255, 0.4);
            letter-spacing: 1px;
        }

        h3.absence-title {
            color: #ff0000; /* Brighter Red */
            margin-bottom: 20px;
            text-shadow: 0 0 5px rgba(255, 0, 0, 0.3);
        }

        h3.bonus-title {
            color: #00ff00; /* Brighter Green */
            margin-bottom: 20px;
            text-shadow: 0 0 5px rgba(0, 255, 0, 0.3);
        }

        h3.table-title {
            color: #808080; /* Gray */
            margin-bottom: 20px;
        }

        .card {
            background: #1a1a1a;
            border: 1px solid #333;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 5px 25px rgba(0, 0, 0, 0.5);
        }

        .input-group {
            margin: 15px 0;
        }

        label.absence-label {
            display: block;
            margin-bottom: 8px;
            color: #ff6b6b; /* Softer Red */
            font-weight: 600;
            font-size: 1.05em;
        }

        label.bonus-label {
            display: block;
            margin-bottom: 8px;
            color: #4caf50; /* Softer Green */
            font-weight: 600;
            font-size: 1.05em;
        }

        input[type="radio"] {
            margin: 0 5px;
            transform: scale(1.2);
            cursor: pointer;
        }

        select, input[type="text"] {
            width: 100%;
            max-width: 300px;
            padding: 12px;
            background: #2a2a2a;
            border: 1px solid #444;
            border-radius: 8px;
            color: #f0f0f0;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 1em;
            margin: 5px 0;
        }
        
        select:focus, input[type="text"]:focus {
            outline: none;
            border-color: #4a90e2;
            box-shadow: 0 0 8px rgba(74, 144, 226, 0.5);
        }

        select:hover {
            background: #404040;
        }

        button {
            padding: 12px 30px;
            background: #4a4a4a;
            border: none;
            border-radius: 8px;
            color: #ffffff;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            margin: 10px 5px;
            font-size: 1em;
            letter-spacing: 0.5px;
        }

        button:hover {
            background: #666666;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(128, 128, 128, 0.4);
        }

        .table-container {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: #262626;
            border-radius: 15px;
            overflow: hidden;
            margin: 0 auto;
        }

        th, td {
            padding: 15px;
            border-bottom: 1px solid #333333;
            vertical-align: top;
        }

        td {
            max-width: 300px;
            word-wrap: break-word;
        }

        th {
            background: #2a2a2a;
            color: #e0e0e0;
            font-weight: 600;
            font-size: 1.1em;
            padding: 15px 10px;
            border-bottom: 2px solid #444;
        }

        .bonus-tag {
            background: #2e7d32; /* Softer Green */
            color: #ffffff;
            padding: 3px 10px;
            border-radius: 15px;
            font-size: 0.85em;
            margin-right: 5px;
            font-weight: 600;
            display: inline-block;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }

        .delete-btn {
            background: #ff0000; /* Brighter Red */
            padding: 8px;
            min-width: 40px;
            box-shadow: 0 0 5px rgba(255, 0, 0, 0.5);
        }

        .delete-btn:hover {
            background: #600000; /* Darker Red */
        }

        .summary-card {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            padding: 25px;
            background: #262626;
            border-radius: 15px;
            margin: 30px auto;
        }

        .summary-item {
            text-align: center;
        }

        .summary-item.absence strong {
            color: #ff0000; /* Brighter Red */
            display: block;
            margin-bottom: 5px;
            font-size: 1.2em;
            text-shadow: 0 0 5px rgba(255, 0, 0, 0.3);
        }

        .summary-item.bonus strong {
            color: #00ff00; /* Brighter Green */
            display: block;
            margin-bottom: 5px;
            font-size: 1.2em;
            text-shadow: 0 0 5px rgba(0, 255, 0, 0.3);
        }

        .summary-item.salary strong {
            color: #64b5f6; /* Light Blue */
            display: block;
            margin-bottom: 5px;
            font-size: 1.2em;
            text-shadow: 0 0 8px rgba(100, 181, 246, 0.3);
        }

        .summary-item span {
            font-size: 1.3em;
            font-weight: 600;
            display: block;
            margin-top: 5px;
        }

        .usd-value {
            color: #90caf9;
            font-size: 1em;
            margin-top: 5px;
            font-weight: 500;
        }

        .action-buttons {
            margin-top: 30px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>تسجيل الغياب - محمد حسام</h2>

        <div class="card">
            <h3 class="absence-title">تسجيل غياب</h3>
            <div class="input-group">
                <label class="absence-label">نوع الغياب:</label>
                <input type="radio" name="absenceType" value="1" checked > نص يوم 
                <input type="radio" name="absenceType" value="0.5">  يوم كامل
            </div>
            <div class="input-group">
                <label class="absence-label">السبب:</label>
                <select id="reason">
                    <option value="اعتذار">اعتذار</option>
                    <option value="تأخر">تأخر</option>
                    <option value="جزاء">جزاء</option>
                    <option value="إنتاجية ضعيفة">إنتاجية ضعيفة</option>
                </select>
            </div>
            <div class="input-group">
                <label class="absence-label">تفاصيل السبب:</label>
                <input type="text" id="absenceDescription" placeholder="أدخل وصفًا تفصيليًا لسبب الخصم" style="width: 300px; padding: 10px; background: #333; border: 1px solid #444; border-radius: 8px; color: #fff;">
            </div>
            <button onclick="addAbsence()">تسجيل الغياب</button>
        </div>

        <div class="card">
            <h3 class="bonus-title">تسجيل بونص</h3>
            <div class="input-group">
                <label class="bonus-label">نوع البونص:</label>
                <input type="radio" name="bonusType" value="1"> نص يوم
                <input type="radio" name="bonusType" value="0.5" checked> يوم كامل
            </div>
            <div class="input-group">
                <label class="bonus-label">السبب:</label>
                <select id="bonusReason">
                    <option value="عمل إضافي">عمل إضافي</option>
                    <option value="إنتاجية عالية">إنتاجية عالية</option>
                    <option value="مبادرة">مبادرة</option>
                    <option value="أداء احترافي">أداء احترافي</option>
                </select>
            </div>
            <div class="input-group">
                <label class="bonus-label">تفاصيل السبب:</label>
                <input type="text" id="bonusDescription" placeholder="أدخل وصفًا تفصيليًا للبونص" style="width: 300px; padding: 10px; background: #333; border: 1px solid #444; border-radius: 8px; color: #fff;">
            </div>
            <button onclick="addBonus()">تسجيل البونص</button>
        </div>

        <div class="card table-container">
            <h3 class="table-title">سجل الغياب والبونص</h3>
            <table>
                <thead>
                    <tr>
                        <th>التاريخ</th>
                        <th>النوع</th>
                        <th>السبب</th>
                        <th>إجراء</th>
                    </tr>
                </thead>
                <tbody id="absenceTable">
                </tbody>
            </table>
        </div>

        <div class="summary-card">
            <div class="summary-item absence">
                <strong>إجمالي الغياب</strong>
                <span id="totalAbsence">0 يوم</span>
            </div>
            <div class="summary-item bonus">
                <strong>إجمالي البونص</strong>
                <span id="totalBonus">0 يوم</span>
            </div>
            <div class="summary-item salary">
                <strong>الراتب المستحق</strong>
                <span id="calculatedSalary">3000 جنيه</span>
                <div class="usd-value">≈ <span id="calculatedSalaryUSD">100 دولار</span></div>
            </div>
        </div>

        <div class="action-buttons">
            <button onclick="clearData()">مسح البيانات</button>
            <button onclick="captureScreenshot()">حفظ التقرير كصورة</button>
        </div>
    </div>
</body>
</html>
